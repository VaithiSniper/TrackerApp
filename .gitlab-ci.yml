before_script:
  - echo "$ENV_CONTENT" >> .env

stages:
  - prod_deployment

variables:
  TAG_LATEST: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest
  TAG_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA
  ENV_CONTENT: $prodenv
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"

prod_deployment:
  image: alpine:latest
  stage: prod_deployment
  tags:
    - prod_deployment
  script:
    - chmod og= $ID_RSA
    - apk update && apk add openssh-client
    - apk add apache2
    - apk add apache2-proxy
    - apk add apache2-ssl
    - rm -rf /var/cache/apk/*
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "git clone https://gitlab-ci-token:$GITLAB_PERSONAL_ACCESS_TOKEN@gitlab.com/$GITLAB_USERNAME/$GITLAB_REPO.git"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "cd TrackerApp && touch .env && echo -e $ENV_CONTENT >> .env"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker rm -f trackerapp || true"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "cd TrackerApp && docker build -t trackerapp . && docker run -p 80:3000 -d trackerapp"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "sudo rm TrackerApp -r"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker image prune --all -y"
  environment:
    name: production
    url: http://192.168.7.237:8000
